{"componentChunkName":"component---src-templates-notebooks-templates-tsx","path":"/notes/init","result":{"pageContext":{"route":"/notes/init","args":{"createdDate":"Nov 25, 2022","name":"/notes/init","type":"html","author":"Simo Ryu","tag":"study","title":"🔥Initializing Parallel Programming / CUDA C++ Study 😋","abstract":"In this winter, we have begun to study parallel programming.","image":"cuda_study_1.png"},"content":"\n<div class=\"cell border-box-sizing text_cell rendered\"><div class=\"inner_cell\">\n<div class=\"text_cell_render border-box-sizing rendered_html\">\n<h1 id=\"%EB%AA%A9%ED%91%9C\">&#47785;&#54364;<a class=\"anchor-link\" href=\"#%EB%AA%A9%ED%91%9C\">&#182;</a></h1><ul>\n<li>병렬 프로그래밍의 기본과 다양한 병렬 알고리즘을 공부할 예정입니다.<ul>\n<li>Matmul, Image Processing, Parallel Sorting, Parallel BFS, Fast Convolution 등등..</li>\n</ul>\n</li>\n<li>CUDA C++, Thrust, python wrapping 등을 공부할 예정입니다.</li>\n<li>CUDA 프로그래밍의 convention, 실제 application 등을 분석할 예정입니다.</li>\n</ul>\n<hr>\n<h2 id=\"CUDA-%EB%9E%80-%EB%AC%B4%EC%97%87%EC%9D%B8%EA%B0%80%EC%9A%94?\"><strong>CUDA</strong> &#46976; &#47924;&#50631;&#51064;&#44032;&#50836;?<a class=\"anchor-link\" href=\"#CUDA-%EB%9E%80-%EB%AC%B4%EC%97%87%EC%9D%B8%EA%B0%80%EC%9A%94?\">&#182;</a></h2><p>CUDA 란 엔비디아에서 개발한 소프트웨어로서, 일반인이 gpu device 언어를 몰라도 c/c++, python 등을 사용하여 gpu 를 다룰 수 있게 해줍니다.</p>\n<h2 id=\"%EC%A0%9C%EA%B0%80-%EC%99%9C-CUDA-%EB%A5%BC-%F0%9F%A4%B7-%EA%B3%B5%EB%B6%80%ED%95%B4%EC%95%BC-%EB%90%98%EB%8A%94%EA%B1%B4%EB%8D%B0%EC%9A%94?\">&#51228;&#44032; &#50780; <strong>CUDA</strong> &#47484; &#129335; &#44277;&#48512;&#54644;&#50556; &#46104;&#45716;&#44148;&#45936;&#50836;?<a class=\"anchor-link\" href=\"#%EC%A0%9C%EA%B0%80-%EC%99%9C-CUDA-%EB%A5%BC-%F0%9F%A4%B7-%EA%B3%B5%EB%B6%80%ED%95%B4%EC%95%BC-%EB%90%98%EB%8A%94%EA%B1%B4%EB%8D%B0%EC%9A%94?\">&#182;</a></h2><p>물론 RAPIDS, pytorch, tensorflow, cupy 와 같이 미리 CUDA 를 사용하기 쉽게 만든 ML 툴들이 있지만, 이러한 툴들은 여러 단점이 있습니다.</p>\n<ol>\n<li>우선, 이들은 당연히 cuda application 을 python 으로 wrapping 한 구조입니다. 때문에 복잡도는 줄어들었지만 적지 않은 performance degradation 을 보여줍니다. 물론 상응하는 프레임워크를 c++ frontend 를 사용하는 방법 등 효율을 높이는 방법이 있겠지만, 그 무엇도 가장 lowest level 을 건드리는 것 보다 높은 효율을 낼 순 없습니다.</li>\n<li>또한, python frontend는 절대로 가능한 모든 flexibility 를 제공하지 않습니다. 이를 직접 다룰 수 있고, 원하면 상황에 맞추어 modification - build 까지 가능하게 하려면 하급 프로그래밍이 가능해야 됩니다.</li>\n<li>가장 중요하게, 없는 GPU 소프트웨어를 직접 개발을 할 수 있습니다. 이미 너무나 많은 연구실/대기업의 application 은 커스텀 CUDA kernel 로 구현되어 있습니다.</li>\n</ol>\n<p>그리고 당연하지만, <strong>21세기에 GPU accelerated programming 을 할 줄 안다는 것은 많은 사람들이 욕심내는 역량입니다!</strong></p>\n<h2 id=\"%F0%9F%90%88-%EC%96%B4%EB%96%BB%EA%B2%8C-%EC%A7%84%ED%96%89%ED%95%A0%EA%B1%B4%EA%B0%80%EC%9A%94?\">&#128008; &#50612;&#46523;&#44172; &#51652;&#54665;&#54624;&#44148;&#44032;&#50836;?<a class=\"anchor-link\" href=\"#%F0%9F%90%88-%EC%96%B4%EB%96%BB%EA%B2%8C-%EC%A7%84%ED%96%89%ED%95%A0%EA%B1%B4%EA%B0%80%EC%9A%94?\">&#182;</a></h2><ol>\n<li>기본 LECTURE SESSION : 제가 처음부터 끝까지 기본적인 쿠다 강의를 진행할 계획입니다. 8 ~ 10 수업으로 진행될 예정입니다.</li>\n<li>Project / Seminar Session : 팀을 이루어 작은 application 을 만들거나, 병렬 알고리즘을 공부하고 CUDA 로 구현하여 공유하는 시간을 가질겁니다.</li>\n</ol>\n\n</div>\n</div>\n</div>\n<div class=\"cell border-box-sizing text_cell rendered\"><div class=\"inner_cell\">\n<div class=\"text_cell_render border-box-sizing rendered_html\">\n\n</div>\n</div>\n</div>\n \n\n","tocList":[{"link":"#%EB%AA%A9%ED%91%9C","name":"목표","depth":1},{"link":"#CUDA-%EB%9E%80-%EB%AC%B4%EC%97%87%EC%9D%B8%EA%B0%80%EC%9A%94?","name":"CUDA 란 무엇인가요?","depth":2},{"link":"#%EC%A0%9C%EA%B0%80-%EC%99%9C-CUDA-%EB%A5%BC-%F0%9F%A4%B7-%EA%B3%B5%EB%B6%80%ED%95%B4%EC%95%BC-%EB%90%98%EB%8A%94%EA%B1%B4%EB%8D%B0%EC%9A%94?","name":"제가 왜 CUDA 를 🤷 공부해야 되는건데요?","depth":2},{"link":"#%F0%9F%90%88-%EC%96%B4%EB%96%BB%EA%B2%8C-%EC%A7%84%ED%96%89%ED%95%A0%EA%B1%B4%EA%B0%80%EC%9A%94?","name":"🐈 어떻게 진행할건가요?","depth":2}]}},"staticQueryHashes":[]}